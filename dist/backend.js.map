{"version":3,"sources":["webpack:///webpack/bootstrap 768f237aa6aa1fafc50b","webpack:///external \"ramda\"","webpack:///./src/server/config/index.js","webpack:///./src/server/config/environments.ts","webpack:///./src/server/db/index.ts","webpack:///external \"passport\"","webpack:///external \"path\"","webpack:///external \"chalk\"","webpack:///external \"graphql\"","webpack:///external \"sequelize\"","webpack:///./utils/hermes.ts","webpack:///./src/server/graphql/posts.ts","webpack:///./src/server/service/user.ts","webpack:///external \"express\"","webpack:///./utils/api/index.ts","webpack:///./webpack/models/Environment.ts","webpack:///external \"awesome-typescript-loader\"","webpack:///external \"graphql-sequelize\"","webpack:///external \"webpack\"","webpack:///./src/server/exceptionMonitoring.ts","webpack:///./src/server/http/authentication/index.ts","webpack:///./src/server/http/index.tsx","webpack:///./src/server/listen.ts","webpack:///./src/server/middleware.ts","webpack:///./src/server/serveFrontend.tsx","webpack:///./src/server/session.ts","webpack:///./utils/http/newApp.ts","webpack:///external \"helmet\"","webpack:///./src/server/db/config/index.ts","webpack:///./src/server/db/models/iteration.ts","webpack:///./src/server/db/models/post.ts","webpack:///./src/server/db/models/user.ts","webpack:///./src/server/graphql/books.ts","webpack:///./src/server/graphql/schema.ts","webpack:///./src/server/graphql/users.ts","webpack:///./src/server/http/authentication/facebook.ts","webpack:///./src/server/http/authentication/mock.ts","webpack:///./src/server/http/graphql.ts","webpack:///./src/server/http/posts.ts","webpack:///./src/server/http/users.ts","webpack:///./src/server/main.tsx","webpack:///./src/server/service/authentication/index.ts","webpack:///./src/server/service/authentication/mock.ts","webpack:///./src/server/service/authentication/profile.mock.ts","webpack:///./src/server/service/post.mock.ts","webpack:///./src/server/service/post.ts","webpack:///./src/server/service/user.mock.ts","webpack:///./utils/date.ts","webpack:///./utils/models/index.ts","webpack:///./webpack/frontend/development.ts","webpack:///./webpack/frontend/index.ts","webpack:///./webpack/frontend/partials/base.ts","webpack:///./webpack/loaders/css-loader.ts","webpack:///./webpack/loaders/hot-typescript-loader.ts","webpack:///./webpack/loaders/awesome-typescript-loader.ts","webpack:///./webpack/partials/aliases.ts","webpack:///./src/server/db/config/index.js","webpack:///external \"body-parser\"","webpack:///external \"continuation-local-storage\"","webpack:///external \"dotenv\"","webpack:///external \"express-graphql\"","webpack:///external \"express-session\"","webpack:///external \"fs\"","webpack:///external \"html-webpack-plugin\"","webpack:///external \"moment\"","webpack:///external \"passport-facebook\"","webpack:///external \"postcss-assets\"","webpack:///external \"postcss-cssnext\"","webpack:///external \"postcss-import\"","webpack:///external \"raven\"","webpack:///external \"util\"","webpack:///external \"webpack-combine-loaders\"","webpack:///external \"webpack-dev-middleware\"","webpack:///external \"webpack-hot-middleware\"","webpack:///external \"webpack-merge\""],"names":[],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 768f237aa6aa1fafc50b","module.exports = require(\"ramda\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ramda\"\n// module id = 0\n// module chunks = 0","/**\n * Load environment variables from .env for local development.\n */\nconst R = require('ramda')\nconst {TEST_ENVS, getEnvVariables} = require('./environments.ts')\n\nconst env = getEnvVariables()\n\nmodule.exports = {\n  port: env.PORT,\n  host: env.HOST,\n  env: env.NODE_ENV,\n  database_url: env.DATABASE_URL,\n  sentry_dsn: env.SENTRY_DSN,\n\n  /** Passport **/\n  clientID: env.FB_CLIENT_ID,\n  clientSecret: env.FB_CLIENT_SECRET,\n  callbackURL: env.FB_CALLBACK_URL,\n\n  /*******************************************************************\n   *** The db object is used by Sequelize to configure migrations. ***\n   *******************************************************************/\n  db: {\n    use_env_variable: 'DATABASE_URL',\n    dialect: 'postgres',\n    timezone: '+00:00',\n    logging: !R.contains(env.NODE_ENV, TEST_ENVS) && console.info,\n  },\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/server/config/index.js\n// module id = 1\n// module chunks = 0","const R = require('ramda')\nconst path = require('path')\nconst chalk = require('chalk')\nconst dotenv = require('dotenv')\nconst envFile = '.env'\n\nconst HEROKU_ENVS = ['heroku-develop', 'heroku-stage', 'heroku-live', 'heroku-tests']\nconst LOCAL_ENVS = ['test', 'local-develop']\nconst TEST_ENVS = ['test', 'ci', 'heroku-tests']\nconst ALL_ENVS = R.pipe(\n  R.concat(HEROKU_ENVS),\n  R.concat(LOCAL_ENVS),\n  R.concat(TEST_ENVS),\n  R.uniq\n)([])\n\nconst getEnvVariables = () => {\n  const fromDotenv = dotenv.config({path: path.resolve(envFile)})\n\n  if (fromDotenv.error) {\n    console.warn(\n      chalk.yellow(`No config file was found at ${fromDotenv.error.path}`)\n    )\n    return process.env\n  }\n\n  const result = R.merge(fromDotenv.parsed, {\n    NODE_ENV: process.env.NODE_ENV, // Override\n  })\n\n  const testEnv = R.contains(result.NODE_ENV, TEST_ENVS)\n  const mismatchNODE_ENV = fromDotenv.parsed.NODE_ENV !== process.env.NODE_ENV\n  if (mismatchNODE_ENV && !testEnv) {\n    console.info(\n      chalk.yellow(\n        `WARNING: ${envFile} specifies NODE_ENV=${fromDotenv.parsed.NODE_ENV}, ` +\n          `but it be overriden by NODE_ENV=${process.env.NODE_ENV}`\n      )\n    )\n  }\n\n  const supportedEnv = R.contains(result.NODE_ENV, ALL_ENVS)\n  if (!supportedEnv) {\n    console.error(\n      chalk.red(`NODE_ENV \"${result.NODE_ENV}\" is not supported. \\n`) +\n        chalk.grey(`Please provide one of: ${JSON.stringify(ALL_ENVS)}`)\n    )\n    throw Error('Invalid environment')\n  }\n  if (!testEnv) {\n    console.info(chalk.green('Environment variables loaded from .env:'))\n    console.info(chalk.grey(JSON.stringify(result, null, 2)))\n  }\n\n  return result\n}\n\nmodule.exports = {\n  HEROKU_ENVS,\n  LOCAL_ENVS,\n  TEST_ENVS,\n  getEnvVariables,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/config/environments.ts","import * as cls from 'continuation-local-storage'\nimport * as Sequelize from 'sequelize'\n\nimport UserModel, {IUserModel} from '~/server/db/models/user'\nimport PostModel, {IPostModel} from '~/server/db/models/post'\nimport IterationModel, {IIterationModel} from '~/server/db/models/iteration'\n\nimport c from './config'\nconst database_url = require('../config/index.js').database_url\n\ninterface IModels {\n  User: IUserModel\n  Post: IPostModel\n  Iteration: IIterationModel\n}\n\nclass Database {\n  /** Models supported by our DB. */\n  private models: IModels\n\n  /** Instance of our Sequelize connection. */\n  private sequelize: Sequelize.Sequelize\n\n  constructor() {\n    const _Sequelize = Sequelize as any\n    _Sequelize.cls = cls.createNamespace('sequelize-transaction')\n\n    if (database_url) {\n      this.sequelize = new _Sequelize(database_url, c)\n    } else {\n      this.sequelize = new _Sequelize(c.database, c.facebookId, c.password, c)\n    }\n\n    this.models = {\n      User: UserModel(this.sequelize),\n      Post: PostModel(this.sequelize),\n      Iteration: IterationModel(this.sequelize),\n    }\n  }\n\n  getModels = () => this.models\n  getSequelize = () => this.sequelize\n}\n\nconst database = new Database()\n\nexport const models = database.getModels()\nexport const sequelize = database.getSequelize()\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/db/index.ts","module.exports = require(\"passport\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"chalk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chalk\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 8\n// module chunks = 0","import * as Chalk from 'chalk'\n\nimport * as U from './date'\n\ntype TLocation = 'server' | 'frontend'\ntype TColor = 'red' | 'blue' | 'white' | 'yellow'\n\ninterface IOptions {\n  name: TLocation\n  silent?: boolean\n}\n\ninterface ILogObject {\n  date: Date\n  log: string\n  formattedDate: string\n  name: TLocation\n  silent: boolean\n}\n\nclass Hermes {\n  name: TLocation\n  silent: boolean\n\n  constructor(options: IOptions) {\n    const {name, silent} = options\n    this.name = name\n    this.silent = silent || false\n  }\n\n  private formatName() {\n    if (this.name === 'server') {\n      return Chalk.bgBlue.white(` ${this.name} `)\n    }\n    if (this.name === 'frontend') {\n      return Chalk.bgYellow.black(` ${this.name} `)\n    }\n    throw Error(`Name must be one of \"server\" or \"frontend\"`)\n  }\n\n  private formatDate(date: Date) {\n    return Chalk.bgBlack(` ${U.formatDate(date)} `)\n  }\n\n  private log(s: string, color: TColor = 'white'): ILogObject {\n    const date = new Date()\n\n    const log =\n      `${this.name === 'server' ? this.formatDate(date) : ''}` +\n      `${this.name === 'server' ? this.formatName() : ''}` +\n      `${this.name === 'server' ? ' ' : ''}` + // Add space if metadata included\n      Chalk[color](s)\n\n    if (!this.silent) {\n      if (this.name === 'server') {\n        console.log(log)\n      } else {\n        console.log('%c' + log, 'background:' + color) // Handle colors differently for frontend\n      }\n    }\n\n    return {\n      date,\n      log,\n      formattedDate: this.formatDate(date),\n      name: this.name,\n      silent: this.silent,\n    }\n  }\n\n  debug(s: string) {\n    return this.log(`INFO: ${s}`, 'blue')\n  }\n\n  info(s: string) {\n    return this.log(`INFO: ${s}`, 'white')\n  }\n\n  warn(s: string) {\n    return this.log(`WARNING: ${s}`, 'yellow')\n  }\n\n  error(s: string) {\n    return this.log(`ERROR: ${s}`, 'red')\n  }\n\n  print(s: string) {\n    return console.log(s)\n  }\n}\n\nexport default Hermes\n\n\n\n// WEBPACK FOOTER //\n// ./utils/hermes.ts","import * as R from 'ramda'\nimport * as G from 'graphql'\nconst {attributeFields, resolver} = require('graphql-sequelize')\nconst {TEST_ENVS} = require('~/server/config/environments')\nconst {env} = require('~/server/config/index.js')\n\nimport {models} from '~/server/db'\n\nexport const mockPosts = [\n  {\n    id: 1,\n    userId: 1,\n    createdAt: '2017-07-01 01:37:28.363',\n    updatedAt: '2017-07-01 01:37:28.363',\n  },\n  {\n    id: 2,\n    userId: 1,\n    createdAt: '2017-07-01 01:37:28.363',\n    updatedAt: '2017-07-01 01:37:28.363',\n  },\n  {\n    id: 3,\n    userId: 2,\n    createdAt: '2017-07-01 01:37:28.363',\n    updatedAt: '2017-07-01 01:37:28.363',\n  },\n]\n\nexport const Type = new G.GraphQLObjectType({\n  name: 'Post',\n  description: 'A post',\n  fields: attributeFields(models.Post),\n})\n\nexport const Schema = {\n  type: new G.GraphQLList(Type),\n  args: {\n    id: {type: G.GraphQLID},\n    facebookId: {type: G.GraphQLString},\n  },\n  resolve: R.contains(env, TEST_ENVS)\n    ? (_: any, _args: {[k: string]: any}) => mockPosts\n    : resolver(models.Post),\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/graphql/posts.ts","import * as Sequelize from 'sequelize'\n\nimport {models} from '~/server/db'\nimport {UserInstance} from '~/server/db/models/user'\nimport {MockUserService} from './user.mock'\n\nconst sequelizeFailure = (reject: Function) => (\n  error: Sequelize.ValidationError\n) => {\n  reject(error.errors[0]) // Return only the descriptive .errors array\n}\n\nexport class UserService extends MockUserService {\n  findByFacebookId(facebookId: string) {\n    return new Promise<UserInstance>((resolve: Function, reject: Function) => {\n      return models.User\n        .findOne({where: {facebookId}})\n        .then((user: UserInstance) => resolve(user))\n        .catch(sequelizeFailure(reject))\n    })\n  }\n\n  find(id: number) {\n    return new Promise<UserInstance>((resolve: Function, reject: Function) => {\n      return models.User\n        .findById(id)\n        .then((user: UserInstance) => resolve(user))\n        .catch(sequelizeFailure(reject))\n    })\n  }\n\n  signIn(facebookId: string) {\n    return new Promise<UserInstance>((resolve: Function, reject: Function) => {\n      return models.User\n        .findOrCreate({where: {facebookId}})\n        .then(([user, _isNew]: [UserInstance, boolean]) => resolve(user))\n        .catch(sequelizeFailure(reject))\n    })\n  }\n\n  create(attributes: {facebookId: string}) {\n    return new Promise<UserInstance>((resolve: Function, reject: Function) => {\n      return models.User\n        .create(attributes)\n        .then((user: UserInstance) => resolve(user))\n        .catch(sequelizeFailure(reject))\n    })\n  }\n\n  all() {\n    return new Promise<\n      Array<UserInstance>\n    >((resolve: Function, reject: Function) => {\n      return models.User\n        .findAll()\n        .then((users: Array<UserInstance>) => resolve(users))\n        .catch(sequelizeFailure(reject))\n    })\n  }\n}\n\nexport const userService = new UserService()\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/service/user.ts","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 12\n// module chunks = 0","import * as express from 'express'\n\ninterface IError {\n  message: string\n}\n\nexport const jsonError = (res: express.Response) => (error: IError) => {\n  res.status(500).json(error)\n}\n\nexport const jsonSuccess = (res: express.Response) => (json: any) => {\n  res.status(200).json(json)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/api/index.ts","import * as U from '../../utils/models'\n\nexport const Enum = U.strEnum([\n  'development',\n  'production',\n])\n\nexport type Type = keyof typeof Enum\n\n\n\n// WEBPACK FOOTER //\n// ./webpack/models/Environment.ts","module.exports = require(\"awesome-typescript-loader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"awesome-typescript-loader\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"graphql-sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-sequelize\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"webpack\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"webpack\"\n// module id = 17\n// module chunks = 0","/**\n * Further details on Sentry setup for Express/Node:\n *   - docs.sentry.io/clients/node/integrations/express/\n *   - docs.sentry.io/clients/node/config/\n */\n\nimport * as express from 'express'\nconst Raven = require('raven')\n\ninterface ISentryConfig {\n  sentry_dsn: string\n  env: string\n}\n\nexport const monitorExceptions = (config: ISentryConfig) => (\n  app: express.Application\n) => {\n  // Must configure Raven before doing anything else with it\n  Raven.config(config.sentry_dsn, {environment: config.env}).install()\n\n  // The request handler must be the first middleware on the app\n  app.use(Raven.requestHandler())\n\n  // The error handler must be before any other error middleware\n  app.use(Raven.errorHandler())\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/exceptionMonitoring.ts","import * as R from 'ramda'\nimport * as express from 'express'\nimport * as passport from 'passport'\n\nimport {IPassportConfig, setupStrategy} from '~/server/service/authentication'\nimport * as Facebook from '~/server/http/authentication/facebook'\nimport * as Mock from '~/server/http/authentication/mock'\nconst {TEST_ENVS} = require('~/server/config/environments')\nconst {env} = require('~/server/config/index.js')\n\nexport const setup = (config: IPassportConfig) => (app: express.Application) => {\n  setupStrategy(config)\n\n  app.use(passport.initialize())\n  app.use(passport.session())\n\n  if (R.contains(env, TEST_ENVS)) {\n    Mock.setup(app)\n  } else {\n    Facebook.setup(app)\n  }\n\n  app.get('/api/profile', isLoggedIn, (req, res) => {\n    res.json(req.user)\n  })\n\n  app.get('/api/signout', isLoggedIn, (req, res) => {\n    req.logout()\n    res.redirect('/')\n  })\n}\n\n/**\n * Route middleware to make sure a user is logged in\n **/\nconst isLoggedIn = (req: express.Request, res: express.Response, next: Function) => {\n  if (req.isAuthenticated()) {\n    return next()\n  }\n  res.status(403).json({message: 'Please sign in.'})\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/http/authentication/index.ts","import * as express from 'express'\n\nimport UsersAPI from '~/server/http/users'\nimport PostsRouter from '~/server/http/posts'\nimport GraphqlAPI from '~/server/http/graphql'\n\nexport default (app: express.Application) => {\n  UsersAPI(app)\n  GraphqlAPI(app)\n  app.use('/api/posts', PostsRouter)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/http/index.tsx","import * as express from 'express'\nimport * as Chalk from 'chalk'\n\nimport Hermes from '../../utils/hermes'\nconst logger = new Hermes({name: 'server'})\n\nexport const listen = (\n  app: express.Application,\n  {host, port}: {host: string; port: number}\n) => {\n  logger.print(Chalk.black.bgGreen(`\\n\\n  Listening at http://${host}:${port}  \\n`))\n  app.listen(port)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/listen.ts","import * as express from 'express'\n\nexport const runHotMiddleware = (app: express.Application) => {\n  const webpack = require('webpack')\n  const webpackConfig = require('../../webpack/frontend/development').default\n  const webpackCompiler = webpack(webpackConfig)\n\n  app.use(\n    require('webpack-dev-middleware')(webpackCompiler, {\n      publicPath: webpackConfig.output.publicPath,\n      stats: {colors: true},\n      noInfo: true,\n      hot: true,\n      inline: true,\n      lazy: false,\n      historyApiFallback: true,\n      quiet: true,\n    })\n  )\n\n  app.use(require('webpack-hot-middleware')(webpackCompiler))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/middleware.ts","import * as express from 'express'\n\ndeclare var __OUTPUT_DIR__: boolean // Defined by webpack.DefinePlugin at compile time\n\nexport const serveFrontend = (app: express.Application) => {\n  const fs   = require('fs')\n  const path = require('path')\n\n  app.use('/', express.static(__dirname))\n\n  app.get('*', (_: express.Request, res: express.Response) => {\n    const file = path.join(__OUTPUT_DIR__, 'index.html') // TODO: Replace with raw-loader require\n    const html = fs.readFileSync(file).toString()\n    res.status(200).send(html)\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/serveFrontend.tsx","import * as express from 'express'\nimport * as session from 'express-session'\n\nexport const setupSession = (app: express.Application) => {\n  /** More info: github.com/expressjs/session#options */\n  const options: session.SessionOptions = {\n    secret: 'ssshhhhh', // TODO: get secret from env\n    resave: false,\n    saveUninitialized: true,\n  }\n\n  app.use(session(options))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/session.ts","import * as bodyParser from 'body-parser'\nimport * as express from 'express'\n\ntype IIntializer = (a: express.Application) => void\n\nexport const newApp = (initalizers: IIntializer[]) => {\n  const app = express()\n  app.use(bodyParser.json())\n  initalizers.map(i => i(app))\n  return app\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/http/newApp.ts","module.exports = require(\"helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"helmet\"\n// module id = 26\n// module chunks = 0","import {IDatabaseConfig} from './interface'\n\nconst config: IDatabaseConfig = require('./index.js')\n\nexport default config\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/db/config/index.ts","import * as SequelizeStatic from 'sequelize'\nimport {Instance, Sequelize} from 'sequelize'\nimport {IPostModel} from './post'\n\nexport interface IterationAttributes {\n  postId: number\n  body?: string\n  title: string\n}\n\nexport interface IterationSchema extends IterationAttributes {\n  createdAt: string\n}\n\nexport interface IterationInstance extends Instance<IterationAttributes> {\n  dataValues: IterationAttributes\n}\n\nexport type IIterationModel = SequelizeStatic.Model<\n  IterationInstance,\n  IterationAttributes\n>\n\nexport default (sequelize: Sequelize): IIterationModel => {\n  const Schema = {\n    id: {\n      allowNull: false,\n      autoIncrement: true,\n      primaryKey: true,\n      type: SequelizeStatic.INTEGER,\n    },\n    createdAt: {\n      allowNull: false,\n      type: SequelizeStatic.DATE,\n    },\n    postId: {\n      type: SequelizeStatic.INTEGER,\n      allowNull: false,\n    },\n    title: {\n      type: SequelizeStatic.STRING,\n      allowNull: false,\n      len:       1,\n    },\n    body: {\n      len:       1,\n      allowNull: false,\n      type:      SequelizeStatic.TEXT,\n    },\n  }\n  const Iteration = sequelize.define<\n    IterationInstance,\n    IterationAttributes\n  >('Iteration', Schema, {\n    classMethods: {\n      associate: (models: {Post: IPostModel}) =>\n        Iteration.belongsTo(models.Post),\n    },\n  })\n  return Iteration\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/db/models/iteration.ts","import * as SequelizeStatic from 'sequelize'\nimport {Instance, Sequelize} from 'sequelize'\nimport {IUserModel} from './user'\n\nexport interface PostAttributes {\n  userId: number\n  createdAt?: Date\n  // NOTE: updatedAt is not part of the Post interface\n}\n\nexport interface PostSchema extends PostAttributes {\n  id: number\n}\n\nexport interface PostInstance extends Instance<PostAttributes> {\n  dataValues: PostAttributes\n}\n\nexport type IPostModel = SequelizeStatic.Model<PostInstance, PostAttributes>\n\nexport default (sequelize: Sequelize): IPostModel => {\n  const Schema = {\n    id: {\n      allowNull: false,\n      autoIncrement: true,\n      primaryKey: true,\n      type: SequelizeStatic.INTEGER,\n    },\n    createdAt: {\n      allowNull: false,\n      type: SequelizeStatic.DATE,\n    },\n    userId: {\n      type: SequelizeStatic.INTEGER,\n      allowNull: false,\n    },\n  }\n  const Post = sequelize.define<PostInstance, PostAttributes>('Post', Schema, {\n    classMethods: {\n      associate: (models: {User: IUserModel}) => Post.belongsTo(models.User),\n    },\n  })\n  return Post\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/db/models/post.ts","import * as SequelizeStatic from 'sequelize'\nimport {Instance, Sequelize} from 'sequelize'\nimport {IPerson} from './person'\n\nexport interface UserAttributes extends IPerson {\n  facebookId: string\n}\n\nexport interface UserInstance extends Instance<UserAttributes> {\n  dataValues: UserAttributes\n}\n\nexport type IUserModel = SequelizeStatic.Model<UserInstance, UserAttributes>\n\nexport default (sequelize: Sequelize): IUserModel => {\n  const Schema = {\n    id: {\n      allowNull: false,\n      autoIncrement: true,\n      primaryKey: true,\n      type: SequelizeStatic.INTEGER,\n    },\n    facebookId: {\n      allowNull: false,\n      unique: true,\n      type: SequelizeStatic.STRING,\n    },\n    createdAt: {\n      allowNull: false,\n      type: SequelizeStatic.DATE,\n    },\n  }\n  return sequelize.define<UserInstance, UserAttributes>('User', Schema, {})\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/db/models/user.ts","import * as G from 'graphql'\n\nexport const mockBooks = [\n  {id: '111', title: 'Moby Dick'},\n  {id: '222', title: 'Invisible Cities'},\n  {id: '333', title: '1984'},\n  {id: '444', title: 'A History of Future Cities'},\n]\n\nconst Type = new G.GraphQLObjectType({\n  name: 'book',\n  fields: {\n    id: {type: G.GraphQLID},\n    title: {type: G.GraphQLString},\n  },\n})\n\nexport const Schema = {\n  type: new G.GraphQLList(Type),\n  args: {\n    id: {type: G.GraphQLID},\n  },\n  resolve: (_: any, _args: {[k: string]: any}) => mockBooks,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/graphql/books.ts","import * as G from 'graphql'\n\nimport * as Books from '~/server/graphql/books'\nimport * as User from '~/server/graphql/users'\nimport * as Post from '~/server/graphql/posts'\n\nconst graphqlSchema = new G.GraphQLSchema({\n  query: new G.GraphQLObjectType({\n    name: 'RootQueryType',\n    fields: {\n      books: Books.Schema,\n      users: User.Schema,\n      posts: Post.Schema,\n    },\n  }),\n})\n\nexport default graphqlSchema\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/graphql/schema.ts","import * as R from 'ramda'\nimport * as G from 'graphql'\nconst {attributeFields, resolver} = require('graphql-sequelize')\nconst {TEST_ENVS} = require('~/server/config/environments')\nconst {env} = require('~/server/config/index.js')\nimport {mockPosts} from '~/server/graphql/posts'\n\nimport {models} from '~/server/db'\nimport * as Post from '~/server/graphql/posts'\n\nexport const mockUsers = [\n  {\n    id: 1,\n    facebookId: 'foo',\n    createdAt: '2017-07-01 01:37:28.363',\n    updatedAt: '2017-07-01 01:37:28.363',\n  },\n  {\n    id: 2,\n    facebookId: 'baz',\n    createdAt: '2017-07-01 01:37:28.363',\n    updatedAt: '2017-07-01 01:37:28.363',\n  },\n]\n\nconst useMocks = R.contains(env, TEST_ENVS)\n\nconst postsResolver = (user: {id: number}) => {\n  if (useMocks) {\n    const belongsTo = ({userId}: {userId: number}) => userId === user.id\n    return R.filter(belongsTo, mockPosts)\n  }\n  return models.Post.findAll({where: {userId: user.id}})\n}\n\nconst userResolver = useMocks\n  ? (_: any, _args: {[k: string]: any}) => mockUsers\n  : resolver(models.User)\n\nconst Type = new G.GraphQLObjectType({\n  name: 'User',\n  description: 'A user',\n  fields: {\n    ...attributeFields(models.User),\n    posts: {\n      type: new G.GraphQLList(Post.Type),\n      resolve: postsResolver,\n    },\n  },\n})\n\nexport const Schema = {\n  type: new G.GraphQLList(Type),\n  args: {\n    id: {type: G.GraphQLID},\n    facebookId: {type: G.GraphQLString},\n  },\n  resolve: userResolver,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/graphql/users.ts","import * as express from 'express'\nimport * as passport from 'passport'\n\nexport const setup = (app: express.Application) => {\n  /**\n   * Redirect the user to Facebook for authentication.  When complete,\n   * Facebook will redirect the user back to the application at\n   *     /auth/facebook/callback\n   **/\n  app.get('/auth/facebook', passport.authenticate('facebook'))\n\n  /**\n   * Facebook will redirect the user to this URL after approval. Finish\n   * the authentication process by attempting to obtain an access token.\n   * If access was granted, the user will be logged in. Otherwise,\n   * authentication has failed.\n   **/\n  app.get(\n    '/auth/facebook/callback',\n    passport.authenticate('facebook', {\n      successRedirect: '/signin',\n      failureRedirect: '/auth/facebook/failure',\n    })\n  )\n\n  app.get('/auth/facebook/failure', (_, res) =>\n    res.send(403).json({\n      message: 'Sorry, but we were not able to connect your Facebook account.',\n    })\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/http/authentication/facebook.ts","import * as express from 'express'\nimport * as passport from 'passport'\n\nexport const setup = (app: express.Application) => {\n  app.get('/auth/facebook', passport.authenticate('test'), (_, res) => {\n    res.redirect('/signin')\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/http/authentication/mock.ts","import * as express from 'express'\nimport * as graphqlHTTP from 'express-graphql'\n\nimport graphqlSchema from '~/server/graphql/schema'\n\nexport default (app: express.Application) => {\n  app.use('/graphql', graphqlHTTP({schema: graphqlSchema, graphiql: true}))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/http/graphql.ts","import * as express from 'express'\n\nimport {jsonError} from '~/../utils/api/requests'\n\nimport {userService} from '~/server/service/user'\nimport {postService} from '~/server/service/post'\n\nconst router = express.Router()\n\nrouter.get('/', async (_: express.Request, res: express.Response) => {\n  try {\n    const posts = await postService.all()\n    res.status(200).json(posts)\n  } catch (e) {\n    jsonError(res)(e)\n  }\n})\n\nrouter.get(\n  '/users/:facebookId',\n  async (req: express.Request, res: express.Response) => {\n    try {\n      const user = await userService.findByFacebookId(req.params.facebookId)\n      const posts = await postService.ownedBy(user)\n      res.status(200).json(posts)\n    } catch (e) {\n      jsonError(res)(e)\n    }\n  }\n)\n\nrouter.post('/create', async (req: express.Request, res: express.Response) => {\n  try {\n    const user = await userService.findByFacebookId(req.body.facebookId)\n    const post = await postService.create(user, {\n      title: req.body.title,\n      body: req.body.body,\n    })\n    res.status(200).json(post)\n  } catch (e) {\n    jsonError(res)(e)\n  }\n})\n\nrouter.get('/:id', async (req: express.Request, res: express.Response) => {\n  try {\n    const iterations = await postService.iterations(req.params.id)\n    res.status(200).json(iterations)\n  } catch (e) {\n    jsonError(res)(e)\n  }\n})\n\nrouter.post('/:id/iterate', async (req: express.Request, res: express.Response) => {\n  try {\n    const postId = Number(req.params.id)\n    const iteration = await postService.iterate(postId, req.body)\n    res.status(200).json(iteration)\n  } catch (e) {\n    jsonError(res)(e)\n  }\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/http/posts.ts","import * as express from 'express'\nimport {jsonError} from '~/../utils/api/requests'\nimport {userService} from '~/server/service/user'\nimport {UserInstance} from '~/server/db/models/user'\n\nexport default (app: express.Application) => {\n  app.get('/api/users', (_: express.Request, res: express.Response) => {\n    userService\n      .all()\n      .then((users: UserInstance[]) => res.status(200).json(users))\n      .catch(jsonError(res))\n  })\n\n  app.get('/api/users/:id', (req: express.Request, res: express.Response) => {\n    userService\n      .find(Number(req.params.id))\n      .then((user: UserInstance) => res.status(200).json(user))\n      .catch(jsonError(res))\n  })\n\n  // TODO: remove\n  app.post('/api/users/create', (req: express.Request, res: express.Response) => {\n    userService\n      .create({facebookId: req.query.facebookId})\n      .then((user: UserInstance) => res.status(200).json(user))\n      .catch(jsonError(res))\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/http/users.ts","import * as R from 'ramda'\nimport * as Chalk from 'chalk'\n\nimport Hermes from '~/../utils/hermes'\nimport {newApp} from '~/../utils/http/newApp'\n\nimport http from './http'\nimport * as Passport from './http/authentication'\nimport {runHotMiddleware} from './middleware'\nimport {listen} from './listen'\nimport {monitorExceptions} from './exceptionMonitoring'\nimport {serveFrontend} from './serveFrontend'\nimport {sequelize} from './db'\nimport {setupSession} from './session'\n\nconst {LOCAL_ENVS} = require('./config/environments')\nconst config = require('./config/index.js')\nconst logger = new Hermes({name: 'server'})\n\nconst app = newApp([\n  a => a.use(require('helmet')()),\n  monitorExceptions(config),\n  setupSession, // Must happen before initializing the API\n  http,\n  Passport.setup(config),\n])\n\nif (R.contains(config.env, LOCAL_ENVS)) {\n  logger.print(Chalk.bgBlue.black(`\\n\\n  Running HMR...  \\n`))\n  runHotMiddleware(app)\n}\n\nserveFrontend(app)\n\nsequelize.sync().then(() => listen(app, config))\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/main.tsx","import * as R from 'ramda'\nimport * as passport from 'passport'\nimport * as Facebook from 'passport-facebook'\n\nimport {userService} from '~/server/service/user'\nimport {UserInstance} from '~/server/db/models/user'\nconst Mock = require('~/server/service/authentication/mock')\nconst {TEST_ENVS} = require('~/server/config/environments')\nconst {env} = require('~/server/config/index.js')\n\nexport interface IPassportConfig {\n  clientID: string\n  clientSecret: string\n  callbackURL: string\n}\n\nconst signInCallback = (\n  profile: Facebook.Profile,\n  done: (_e: any, user?: Facebook.Profile) => void\n) => {\n  const facebookId = profile.id\n  userService\n    .signIn(facebookId)\n    .then((_u: UserInstance) => done(null, profile))\n    .catch((e: any) => done(JSON.stringify(e)))\n}\n\nconst setupFacebookStrategy = (options: IPassportConfig) => {\n  const fbStrategy = new Facebook.Strategy(options, (_t, _rt, profile, done) => {\n    signInCallback(profile, done)\n  })\n  passport.use(fbStrategy)\n}\n\nconst setupMockStrategy = (options: IPassportConfig) => {\n  const mockStrategy = new Mock.Strategy(options, signInCallback)\n  passport.use(mockStrategy)\n}\n\nexport const setupStrategy = (options: IPassportConfig) => {\n  const isTesting = R.contains(env, TEST_ENVS)\n\n  if (isTesting) {\n    setupMockStrategy(options)\n  } else {\n    setupFacebookStrategy(options)\n  }\n\n  /**\n   * Determines which data of the user object should be stored in the session.\n   * The result of the serializeUser method is attached to the session as\n   * req.session.passport.user.\n   **/\n  passport.serializeUser((user, done) => {\n    done(null, user)\n  })\n\n  /**\n   * The first argument of deserializeUser corresponds to the key of the user\n   * object that was given to the done function. So your whole object is\n   * retrieved with help of that key. That key here is the user id (key can\n   * be any key of the user object i.e. name, email etc). In deserializeUser\n   * that key is matched with the in memory array / database or any data resource.\n   **/\n  passport.deserializeUser((user, done) => {\n    done(null, user)\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/service/authentication/index.ts","import * as util from 'util'\nconst passport = require('passport')\nimport * as Facebook from 'passport-facebook'\n\nimport profileMock from '~/server/service/authentication/profile.mock'\n\nexport const Strategy = function Strategy(\n  this: any,\n  _options: Object,\n  verify: Function\n) {\n  this.name = 'test'\n  this.verify = verify\n}\n\nutil.inherits(Strategy, passport.Strategy)\n\nStrategy.prototype.authenticate = function(this: any, _: any) {\n  this.verify(profileMock, (err: any, profile: Facebook.Profile, info: any) => {\n    if (err) {\n      return this.error(err)\n    }\n    if (!profile) {\n      return this.fail(info)\n    }\n    this.success(profile, info)\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/service/authentication/mock.ts","import * as Facebook from 'passport-facebook'\n\nexport const id = 'xxxxxxxxxxxxxxxx'\nexport const displayName = 'Mock User'\nconst profileMock: Facebook.Profile = {\n  id,\n  displayName,\n  provider: 'facebook',\n  _raw: `{\"name\":\"${displayName}\",\"id\":\"${id}\"}`,\n  _json: {name: displayName, id},\n}\n\nexport default profileMock\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/service/authentication/profile.mock.ts","import {PostInstance} from '~/server/db/models/post'\nimport {UserInstance} from '~/server/db/models/user'\nimport {IterationInstance} from '~/server/db/models/iteration'\n\nexport class MockPostService {\n  public mockPost = {\n    postId: 9,\n    title: 'Foo Bar Baz',\n  }\n\n  create(user: UserInstance, _iteration: {body?: string; title: string}) {\n    return new Promise<PostInstance>((resolve, _) => {\n      const mock = {dataValues: {userId: user.get('id')}}\n      resolve(<PostInstance>mock)\n    })\n  }\n\n  all() {\n    return new Promise<PostInstance[]>((resolve, _) => {\n      const baz = [\n        {dataValues: {userId: 1}},\n        {dataValues: {userId: 2}},\n        {dataValues: {userId: 2}},\n      ]\n      resolve(<PostInstance[]>baz)\n    })\n  }\n\n  ownedBy(user: UserInstance) {\n    return new Promise<PostInstance[]>((resolve, _) => {\n      const baz = [\n        {dataValues: {userId: user.get('id')}},\n        {dataValues: {userId: user.get('id')}},\n        {dataValues: {userId: user.get('id')}},\n      ]\n      resolve(<PostInstance[]>baz)\n    })\n  }\n\n  iterations(postId: number) {\n    return new Promise<IterationInstance[]>((resolve, reject) => {\n      if (postId % 2) {\n        const mock = [\n          {dataValues: {postId, title: 'Post 1, with no body'}},\n          {\n            dataValues: {\n              postId,\n              title: 'Post 2, with body',\n              body: 'Body of post 2',\n            },\n          },\n        ]\n        resolve(<IterationInstance[]>mock)\n      } else {\n        reject({message: `Cannot find post with id ${postId}`})\n      }\n    })\n  }\n\n  iterate(postId: number, data: {body?: string; title: string}) {\n    return new Promise<IterationInstance>(async (resolve, _) => {\n      const mock = {dataValues: {...this.mockPost, ...data, postId}}\n      resolve(<IterationInstance>mock)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/service/post.mock.ts","import * as Sequelize from 'sequelize'\nimport * as R from 'ramda'\n\nimport {models, sequelize} from '~/server/db'\nimport {PostInstance} from '~/server/db/models/post'\nimport {MockPostService} from './post.mock'\nimport {UserInstance} from '~/server/db/models/user'\nimport {IterationInstance} from '~/server/db/models/iteration'\nimport Hermes from '~/../utils/hermes'\n\nconst logger = new Hermes({name: 'server'})\n\nconst sequelizeFailure = (reject: Function) => (\n  error: Sequelize.ValidationError\n) => {\n  logger.warn(error.toString()) // Log full error\n  reject(error) // Return only the descriptive .errors array\n  // reject(error.errors[0]) // Return only the descriptive .errors array\n}\n\ntype IIteration = {body?: string; title: string}\n\nconst validateIteration = (\n  iteration: IIteration,\n  reject: Function,\n  cb: Function\n) => {\n  if (R.isEmpty(iteration.title)) {\n    return reject('Please provide a title.')\n  }\n  if (R.isEmpty(iteration.body)) {\n    return reject('Please write something.')\n  }\n  cb()\n}\n\nconst initPost = (\n  resolve: Function,\n  userId: number,\n  iteration: IIteration\n) => async (t: Sequelize.Transaction) => {\n  const post: PostInstance = await models.Post.create({userId}, {transaction: t})\n  await models.Iteration.create({...iteration, postId: post.get('id')})\n  resolve(post)\n}\n\nexport class PostService extends MockPostService {\n  create(user: UserInstance, iteration: IIteration) {\n    return new Promise<PostInstance>((resolve: Function, reject: Function) => {\n      if (!user || !user.get('id')) {\n        return reject('Please provide a user.')\n      }\n      validateIteration(iteration, reject, () => {\n        return sequelize\n          .transaction(initPost(resolve, user.get('id'), iteration))\n          .then((post: PostInstance) => resolve(post))\n          .catch((err: Error) => reject(err))\n      })\n    })\n  }\n\n  all() {\n    return new Promise<PostInstance[]>((resolve: Function, reject: Function) => {\n      return models.Post\n        .findAll()\n        .then((posts: PostInstance[]) => resolve(posts))\n        .catch(sequelizeFailure(reject))\n    })\n  }\n\n  ownedBy(user: UserInstance) {\n    return new Promise<PostInstance[]>((resolve: Function, reject: Function) => {\n      return models.Post\n        .findAll({where: {userId: user.get('id')}})\n        .then((posts: PostInstance[]) => resolve(posts))\n        .catch(sequelizeFailure(reject))\n    })\n  }\n\n  iterations(postId: number) {\n    return new Promise<IterationInstance[]>((resolve, reject) => {\n      return models.Iteration.findAll({where: {postId}}).then(resolve).catch(reject)\n    })\n  }\n\n  iterate(postId: number, data: IIteration) {\n    return new Promise<IterationInstance>((resolve, reject) => {\n      validateIteration(data, reject, () => {\n        return models.Iteration.create({postId, ...data}).then(resolve).catch(reject)\n      })\n    })\n  }\n\n  comments(iterationId: number) {\n    return new Promise<IterationInstance[]>((resolve, _reject) => {\n      iterationId\n      resolve([])\n    })\n  }\n}\n\nexport const postService = new PostService()\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/service/post.ts","import {UserAttributes, UserInstance} from '~/server/db/models/user'\n\nexport class MockUserService {\n  findByFacebookId(facebookId: string): Promise<UserInstance> {\n    return new Promise<UserInstance>((resolve: Function, reject: Function) => {\n      if (!facebookId) {\n        reject({message: `Please provide a facebookId`})\n      }\n      if (facebookId == 'thisUsernameDoesntExist') {\n        reject({message: `User with facebookId \"${facebookId}\" does not exist`})\n      }\n      resolve({\n        dataValues: {facebookId, id: 123},\n        get: (key: string) => {\n          switch (key) {\n            case 'id':\n              return 123\n            default:\n              throw Error(`Value for key \"${key}\" is undefined on mock user`)\n          }\n        },\n      })\n    })\n  }\n\n  find(id: number): Promise<UserInstance> {\n    return new Promise<UserInstance>((resolve: Function, reject: Function) => {\n      if (isNaN(id)) {\n        reject({message: `User id must be an integer`})\n      }\n      if (id === 2) {\n        reject({message: `User with id \"${2}\" does not exist`})\n      }\n      resolve({\n        dataValues: {facebookId: 'fake-fb-id', id},\n        get: (key: string) => {\n          switch (key) {\n            case 'id':\n              return 123\n            default:\n              throw Error(`Value for key \"${key}\" is undefined on mock user`)\n          }\n        },\n      })\n    })\n  }\n\n  create(attributes: UserAttributes): Promise<UserInstance> {\n    return new Promise<UserInstance>((resolve: Function, reject: Function) => {\n      if (attributes.facebookId == 'thisUsernameIsntAvailable') {\n        reject({message: `Sorry, \"${attributes.facebookId}\" is not available`})\n      }\n      resolve({dataValues: attributes})\n    })\n  }\n\n  all(): Promise<Array<UserInstance>> {\n    return new Promise<Array<UserInstance>>((resolve: Function, _: Function) => {\n      resolve([{facebookId: 'foobar'}])\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/service/user.mock.ts","import * as moment from 'moment'\n\nexport const formatDateStr = (s: string) => {\n  const result = new Date(Date.parse(s)).toLocaleTimeString('en-UK', {\n    hour12: false,\n    day: '2-digit',\n    month: 'numeric',\n    year: 'numeric',\n  })\n  if (result === 'Invalid Date') {\n    throw Error(result)\n  }\n  return result\n}\n\nexport const formatDate = (d: Date) => {\n  return moment(d).format('DD-MM-YYYY HH:mm:ss')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/date.ts","export type StrObject = { [key: string]: string }\n\n// Adopted from:\n//   https://basarat.gitbooks.io/typescript/docs/types/literal-types.html\nexport function strEnum<T extends string>(o: Array<T>): {[K in T]: K} {\n  return o.reduce((res, key) => {\n    res[key] = key\n    return res\n  }, Object.create(null))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/models/index.ts","import * as Env  from '../models/Environment'\nimport { setup } from './'\n\nexport default setup(Env.Enum.development)\n\n\n\n// WEBPACK FOOTER //\n// ./webpack/frontend/development.ts","import * as webpackMerge from 'webpack-merge'\nimport * as webpack      from 'webpack'\nimport * as path         from 'path'\n\nimport * as Options from '../models/Options'\nimport * as Env     from '../models/Environment'\n\nexport const setup = (env: Env.Type) => {\n  const isProd = String(env) === String(Env.Enum.production)\n\n  const options: Options.Interface = {\n    rootDir:   path.join(__dirname, '../..'),\n    outputDir: isProd ? 'dist' : 'build',\n    devtool:   'source-map',\n    console:   !isProd,\n    isProd,\n  }\n\n  const shared = [\n    require('../loaders/css-loader'),\n    require('./partials/base'),\n    require('../partials/aliases'),\n  ]\n\n  const partials = (\n    isProd\n    ? [\n      require('../loaders/typescript-loader'),\n      ...shared,\n    ]\n    : [\n      require('../loaders/hot-typescript-loader'),\n      ...shared,\n    ]\n  )\n  return webpackMerge(partials.map((m): webpack.Configuration => m.partial(options)))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./webpack/frontend/index.ts","import * as path from 'path'\nimport * as webpack from 'webpack'\n\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\n\nimport * as Options from 'webpack/models/Options'\n\nconst entryFile = './src/frontend/main.tsx'\nexport const partial = (c: Options.Interface): webpack.Configuration => ({\n  entry: c.isProd\n    ? entryFile\n    : {\n        app: ['webpack-hot-middleware/client?reload=true', entryFile],\n      },\n\n  output: {\n    path: path.join(c.rootDir, c.outputDir),\n    filename: 'frontend.js',\n    publicPath: '/', // Prepended to urls injected by HtmlWebpackPlugin\n  },\n\n  devtool: c.devtool,\n\n  plugins: [\n    ...(c.isProd ? [] : [new webpack.HotModuleReplacementPlugin()]),\n    new HtmlWebpackPlugin({template: './src/frontend/index.html'}),\n  ],\n})\n\n\n\n// WEBPACK FOOTER //\n// ./webpack/frontend/partials/base.ts","import * as webpack from 'webpack'\nimport * as Options from 'webpack/models/Options'\n\n\nconst loaders = (c: Options.Interface): webpack.Loader[] => {\n  const frontendDir = (path: string = '') =>\n    `${c.rootDir}/src/frontend/${path}`\n\n  return [\n    {\n      loader: 'style-loader'\n    },\n    {\n      loader: 'css-loader',\n      options: {\n        importLoaders:  2,\n        sourceMap:      true,\n        modules:        true,\n        localIdentName: '[local]___[hash:base64:5]',\n      },\n    },\n    {\n      loader: 'postcss-loader',\n      options: {\n        plugins: () => [\n          require('postcss-import')({ path: [ frontendDir() ] }),\n          require('postcss-cssnext')(),\n          require('postcss-assets')({ relative: frontendDir() })\n        ],\n      },\n    },\n  ]\n}\n\nexport const partial = (c: Options.Interface): webpack.Configuration => ({\n  module: {\n    rules: [\n      {\n        include: c.rootDir,\n        test:    /\\.css?$/,\n        use:     loaders(c),\n        exclude: /node_modules/,\n      },\n    ]\n  },\n})\n\n\n\n// WEBPACK FOOTER //\n// ./webpack/loaders/css-loader.ts","import * as webpack from 'webpack'\n\nconst { CheckerPlugin } = require('awesome-typescript-loader')\n\nexport const partial = (): webpack.Configuration => ({\n  module: {\n    rules: [\n      {\n        test:    /\\.tsx?$/,\n        loader:  require('webpack-combine-loaders')([\n          'react-hot-loader',\n          'awesome-typescript-loader',\n        ]),\n        exclude: /node_modules/,\n      }\n    ]\n  },\n\n  plugins: [ new CheckerPlugin() ],\n})\n\n\n\n// WEBPACK FOOTER //\n// ./webpack/loaders/hot-typescript-loader.ts","import * as webpack from 'webpack'\n\nconst { CheckerPlugin } = require('awesome-typescript-loader')\n\nexport const partial = (): webpack.Configuration => ({\n  module: {\n    rules: [\n      {\n        test:    /\\.tsx?$/,\n        loader:  'awesome-typescript-loader',\n        exclude: /node_modules/,\n      }\n    ]\n  },\n\n  plugins: [ new CheckerPlugin() ],\n})\n\n\n\n// WEBPACK FOOTER //\n// ./webpack/loaders/awesome-typescript-loader.ts","import * as path from 'path'\nimport * as webpack from 'webpack'\n\nimport * as Options from 'webpack/models/Options'\n\nexport const partial = (c: Options.Interface): webpack.Configuration => ({\n  resolve: {\n    modules: ['node_modules', path.join(c.rootDir, 'src')],\n\n    /**\n     * Though the project's source is in Typescript, we must support Javascript\n     * resolution as well, because some node_modules import JS files.\n     */\n    extensions: ['.tsx', '.ts', '.js', '.jsx'],\n\n    alias: {\n      '~': path.resolve('./src'),\n    },\n  },\n})\n\n\n\n// WEBPACK FOOTER //\n// ./webpack/partials/aliases.ts","/**\n * NOTE: The Sequelize CLI expects config to be either .json or .js. As\n * as result, this JS file has to exist in order to execute migrations.\n * The index.ts file in this same directory is identical to this, but\n * enforces the typed IDatabaseConfig interface.\n */\n\nconst appConfig = require('../../config')\n\nmodule.exports = appConfig.db\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/server/db/config/index.js\n// module id = 55\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 56\n// module chunks = 0","module.exports = require(\"continuation-local-storage\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"continuation-local-storage\"\n// module id = 57\n// module chunks = 0","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 58\n// module chunks = 0","module.exports = require(\"express-graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-graphql\"\n// module id = 59\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 60\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 61\n// module chunks = 0","module.exports = require(\"html-webpack-plugin\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"html-webpack-plugin\"\n// module id = 62\n// module chunks = 0","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 63\n// module chunks = 0","module.exports = require(\"passport-facebook\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport-facebook\"\n// module id = 64\n// module chunks = 0","module.exports = require(\"postcss-assets\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"postcss-assets\"\n// module id = 65\n// module chunks = 0","module.exports = require(\"postcss-cssnext\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"postcss-cssnext\"\n// module id = 66\n// module chunks = 0","module.exports = require(\"postcss-import\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"postcss-import\"\n// module id = 67\n// module chunks = 0","module.exports = require(\"raven\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"raven\"\n// module id = 68\n// module chunks = 0","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 69\n// module chunks = 0","module.exports = require(\"webpack-combine-loaders\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"webpack-combine-loaders\"\n// module id = 70\n// module chunks = 0","module.exports = require(\"webpack-dev-middleware\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"webpack-dev-middleware\"\n// module id = 71\n// module chunks = 0","module.exports = require(\"webpack-hot-middleware\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"webpack-hot-middleware\"\n// module id = 72\n// module chunks = 0","module.exports = require(\"webpack-merge\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"webpack-merge\"\n// module id = 73\n// module chunks = 0"],"sourceRoot":""}